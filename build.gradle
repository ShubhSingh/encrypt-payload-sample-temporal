// Run 'gradle checkUpdates' to find out which dependencies have newer versions

plugins {
    id 'com.github.sherter.google-java-format' version '0.9'
    id "net.ltgt.errorprone" version "1.2.1"
    id 'name.remal.check-updates' version '1.0.211'
}

apply plugin: 'java'
apply plugin: 'com.github.sherter.google-java-format'

googleJavaFormat {
    toolVersion '1.7'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

dependencies {
    implementation group: 'io.temporal', name: 'temporal-sdk', version: '1.0.0'
    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testImplementation group: 'junit', name: 'junit', version: '4.13'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.4'

    errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
    errorprone("com.google.errorprone:error_prone_core:2.4.0")

    // lombok dependency
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.1'

    // dependencies added for jackson crypto
    compile group: 'com.codingrodent', name: 'jackson-json-crypto', version: '1.1.0'
    compile group: 'javax.el', name: 'javax.el-api', version: '2.2.4'
    compile group: 'org.glassfish.web', name: 'javax.el', version: '2.2.4'
}

compileJava {
    dependsOn 'googleJavaFormat'
}

task execute(type: JavaExec) {
    main = findProperty("mainClass") ?: ""
    classpath = sourceSets.main.runtimeClasspath
}


// Executes most of the hello workflows as a sanity check
task runHello {
    doLast {
        // Cron and Periodic are not in the list as they take long time to stop
        ["io.temporal.samples.encryption.EncryptPayloadActivity"
        ].each { mainClass ->
            println mainClass
            javaexec {
                classpath = sourceSets.main.runtimeClasspath
                main = mainClass
            }
        }
    }
}
